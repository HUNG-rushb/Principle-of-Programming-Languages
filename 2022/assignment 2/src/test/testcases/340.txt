
        Class BinarySearch {
            binarySearch(arr: Array[Int, 100]; l: Int; r: Int; x: Int) {
                If (r >= l) {
                    Var mid: Int = l + (r - l) / 2;
                    ## IIf (start >= end)
                {
                    Return ;
                }
                Var p : Int = QuickSort::$partition(arr, start, end);
                QuickSort::$quickSort(arr, start, p - 1);
                QuickSort::$quickSort(arr, p + 1, end);f the element is present at the middle itself ##
                    If (arr[mid] == x) {
                        Return mid;
                    }
            
                    ## If element is smaller than mid, then ##
                    ## it can only be presentIf (start >= end)
                {
                    Return ;
                }
                Var p : Int = QuickSort::$partition(arr, start, end);
                QuickSort::$quickSort(arr, start, p - 1);
                QuickSort::$quickSort(arr, p + 1, end); in left subarray ##
                    If (arr[mid] > x) {
                        Return Self.binarySearch(arr, l, mid - 1, x);
                    }
            
                    ## Else theIf (start >= end)
                {
                    Return ;
                }
                Var p : Int = QuickSort::$partition(arr, start, end);
                QuickSort::$quickSort(arr, start, p - 1);
                QuickSort::$quickSort(arr, p + 1, end); element can only be present ##
                    ## in right subarrIf (start >= end)
                {
                    Return ;
                }
                Var p : Int = QuickSort::$partition(arr, start, end);
                QuickSort::$quickSort(arr, start, p - 1);
                QuickSort::$quickSort(arr, p + 1, end);ay ##
                    Return Self.binarySearch(arr, mid + 1, r, x);
                }
            
                ## We reach here when element is not ##
                ## present in array ##
                Return -1;
            }
        }