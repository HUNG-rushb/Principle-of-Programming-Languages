Program([
	VarDecl(x, IntegerType)
	VarDecl(y, IntegerType)
	VarDecl(z, IntegerType)
	FuncDecl(abs, IntegerType, [], plus, BlockStmt([VarDecl(c, IntegerType, BinExpr(+, Id(a), FuncCall(plus, [IntegerLit(5)]))), ReturnStmt(Id(c)), VarDecl(c, IntegerType, BinExpr(+, Id(a), FuncCall(plus, [IntegerLit(5)]))), ReturnStmt(Id(c)), VarDecl(c, IntegerType, BinExpr(+, Id(a), FuncCall(plus, [IntegerLit(5)]))), ReturnStmt(Id(c)), VarDecl(c, IntegerType, BinExpr(+, Id(a), FuncCall(plus, [IntegerLit(5)]))), ReturnStmt(Id(c))]))
	FuncDecl(plus, IntegerType, [Param(b, IntegerType)], None, BlockStmt([VarDecl(a, IntegerType, IntegerLit(2)), ReturnStmt(BinExpr(+, Id(a), Id(b))), VarDecl(a, IntegerType, IntegerLit(2)), ReturnStmt(BinExpr(+, Id(a), Id(b))), VarDecl(a, IntegerType, IntegerLit(2)), ReturnStmt(BinExpr(+, Id(a), Id(b))), VarDecl(a, IntegerType, IntegerLit(2)), ReturnStmt(BinExpr(+, Id(a), Id(b)))]))
	FuncDecl(abs, IntegerType, [], plus, BlockStmt([VarDecl(c, IntegerType, BinExpr(+, Id(a), FuncCall(plus, [IntegerLit(5)]))), ReturnStmt(Id(c)), VarDecl(c, IntegerType, BinExpr(+, Id(a), FuncCall(plus, [IntegerLit(5)]))), ReturnStmt(Id(c)), VarDecl(c, IntegerType, BinExpr(+, Id(a), FuncCall(plus, [IntegerLit(5)]))), ReturnStmt(Id(c)), VarDecl(c, IntegerType, BinExpr(+, Id(a), FuncCall(plus, [IntegerLit(5)]))), ReturnStmt(Id(c))]))
])